1:

500、302状态码代表什么意思？（我当时只知道404和200）?
Http中200、302、304、404和500等响应状态码所表示的意义？
200:访问成功（表示一切正常，返回的是正常请求结果）
302：临时重定向（指出被请求的文档已被临时移动到别处，此文档的新的URL在Location响应头中给出）
304：未修改（表示客户机缓存的版本是最新的，客户机应该继续使用它。）
404：访问的文件不存在（服务器上不存在客户机所请求的资源）
500：内部服务器错误（服务器端的CGI、ASP、JSP等程序发生错误）

2:原生js 实现Ajax
  var Ajax={
      get: function (url,fn){
          var obj=new XMLHttpRequest();  // XMLHttpRequest对象用于在后台与服务器交换数据          
          obj.open('GET',url,true);
          obj.onreadystatechange=function(){
              if (obj.readyState == 4 && obj.status == 200 || obj.status == 304) { // readyState==4说明请求已完成
                  fn.call(this, obj.responseText);  //从服务器获得数据
              }
          };
         obj.send(null);
     },
    post: function (url, data, fn) {
         var obj = new XMLHttpRequest();
         obj.open("POST", url, true);
         obj.setRequestHeader("Content-type", "application/x-www-form-urlencoded"); // 发送信息至服务器时内容编码类型
         obj.onreadystatechange = function () {
             if (obj.readyState == 4 && (obj.status == 200 || obj.status == 304)) {  // 304未修改
                 fn.call(this, obj.responseText);
             }
         };
         obj.send(data);
    }
 }


1,open() 方法需要三个参数:

　　第一个参数定义发送请求所使用的方法（GET 还是 POST）。与 POST 相比，GET 更简单也更快，并且在大部分情况下都能用。然而，在以下情况中，请使用 POST 请求：

　　.无法使用缓存文件（更新服务器上的文件或数据库）
　　.向服务器发送大量数据（POST 没有数据量限制）
　　.发送包含未知字符的用户输入时，POST 比 GET 更稳定也更可靠

　　第二个参数规定服务器端脚本的 URL(该文件可以是任何类型的文件，比如 .txt 和 .xml，或者服务器脚本文件，
    比如 .asp 和 .php (在传回响应之前，能够在服务器上执行任务)。

　　第三个参数规定应当对请求进行异步地处理(true（异步）或 false（同步）)。

2,send() 方法可将请求送往服务器。

3,onreadystatechange 属性存有处理服务器响应的函数。

4,readyState 属性存有服务器响应的状态信息。每当 readyState 改变时，onreadystatechange 函数就会被执行。

    通过学习对XMLHttpRequest对象又熟悉了一些，哈哈

