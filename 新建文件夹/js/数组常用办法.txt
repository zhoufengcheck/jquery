1、数组的创建
复制代码 代码如下:

	var arrayObj = new Array();　//创建一个数组
	var arrayObj = new Array([size]);　//创建一个数组并指定长度，注意不是上限，是长度
	var arrayObj = new Array([element0[, element1[, ...[, elementN]]]]);　//创建一个数组并赋值
要说明的是，虽然第二种方法创建数组指定了长度，但实际上所有情况下数组都是变长的，也就是说即使指定了长度为5，
仍然可以将元素存储在规定长度以外的，注意：这时长度会随之改变。

2、数组的元素的访问
复制代码 代码如下:

	var testGetArrValue=arrayObj[1]; //获取数组的元素值
	arrayObj[1]= "这是新值"; //给数组元素赋予新的值

3、数组元素的添加
复制代码 代码如下:

	arrayObj. push([item1 [item2 [. . . [itemN ]]]]);// 将一个或多个新元素添加到数组结尾，并返回数组新长度
	arrayObj.unshift([item1 [item2 [. . . [itemN ]]]]);// 将一个或多个新元素添加到数组开始，数组中的元素自动后移，返回数组新长度
	arrayObj.splice(insertPos,0,[item1[, item2[, . . . [,itemN]]]]);//将一个或多个新元素插入到数组的指定位置，插入位置的元素自动后移，返回""。

4、数组元素的删除
复制代码 代码如下:

	arrayObj.pop(); //移除最后一个元素并返回该元素值
	arrayObj.shift(); //移除最前一个元素并返回该元素值，数组中元素自动前移
	arrayObj.splice(deletePos,deleteCount); //删除从指定位置deletePos开始的指定数量deleteCount的元素，数组形式返回所移除的元素

5、数组的截取和合并
复制代码 代码如下:

	arrayObj.slice(start, [end]); //以数组的形式返回数组的一部分，注意不包括 end 对应的元素，如果省略 end 将复制 start 之后的所有元素
	arrayObj.concat([item1[, item2[, . . . [,itemN]]]]); //将多个数组（也可以是字符串，或者是数组和字符串的混合）连接为一个数组，返回连接好的新的数组

6、数组的拷贝
复制代码 代码如下:

	arrayObj.slice(0); //返回数组的拷贝数组，注意是一个新的数组，不是指向
	arrayObj.concat(); //返回数组的拷贝数组，注意是一个新的数组，不是指向

7、数组元素的排序
复制代码 代码如下:

	arrayObj.reverse(); //反转元素（最前的排到最后、最后的排到最前），返回数组地址
	arrayObj.sort(); //对数组元素排序，返回数组地址

//数组sort排序  1就是换，-1就是不交换
var desc = function(x,y)
{     
        if (x > y)       
                return -1;  //返回一个小于0 的数即可  
        else         
                return 1;  //返回一个大于0 的数即可  
}     
//升序函数  
var asc = function(x,y)     
{     
        if (x > y)       
                return 1;  //返回一个大于0 的数即可  
        else             
                return -1;  //返回一个小于0 的数即可  
} 

8、数组元素的字符串化
复制代码 代码如下:

	arrayObj.join(separator); //返回字符串，这个字符串将数组的每一个元素值连接在一起，中间用 separator 隔开。

9:arrayObject.splice(index,howmany,item1,.....,itemX)

参数			描述

index			必需。整数，规定添加/删除项目的位置，使用负数可从数组结尾处规定位置。
howmany			必需。要删除的项目数量。如果设置为 0，则不会删除项目。
item1, ..., itemX	可选。向数组添加的新项目。


10
arrayObject.slice(start,end)
参数			描述
start			必需。规定从何处开始选取。如果是负数，那么它规定从数组尾部开始算起的位置。也就是说，-1 指最后一个元素，-2 指倒数第二个元素，以此类推。
end			可选。规定从何处结束选取。不包括 end 对应的元素,该参数是数组片断结束处的数组下标。如果没有指定该参数，那么切分的数组包含从 start 到数组结束的所有元素。
			      如果这个参数是负数，那么它规定的是从数组尾部开始算起的元素。
返回值
返回一个新的数组，包含从 start 到 end （不包括该元素）的 arrayObject 中的元素。